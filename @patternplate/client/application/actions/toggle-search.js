'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.type = undefined;

var _ = require('./');

exports.default = toggleSearch;
var type = exports.type = 'TOGGLE_SEARCH_ENABLED';

function toggleSearch() {
	var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	return function (dispatch, getState) {
		var state = getState();

		if (payload.sync) {
			focus(state.searchEnabled);
			return;
		}

		var next = 'focus' in payload ? payload.focus : !state.searchEnabled;

		if (!next) {
			dispatch((0, _.search)({ persist: true, value: value() }));
		}

		dispatch((0, _.patchLocation)({ query: { 'search-enabled': next, 'search-preview': 0 } }));
	};
}

toggleSearch.type = type;
toggleSearch.key = 'search-enabled';
toggleSearch.property = 'searchEnabled';

function focus(next) {
	if (!next) {
		return;
	}

	if (!('document' in global)) {
		return;
	}

	setTimeout(function () {
		var el = global.document.query('input[data-search]');

		if (!el) {
			return;
		}

		if (global.document.activeElement !== el) {
			el.focus();
		}

		var range = el.value.length;
		el.setSelectionRange(range, range);
	}, 100);
}

function value() {
	if (!('document' in global)) {
		return;
	}

	var el = global.document.query('input[data-search]');

	if (!el) {
		return;
	}

	return el.value;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9hcHBsaWNhdGlvbi9hY3Rpb25zL3RvZ2dsZS1zZWFyY2guanMiXSwibmFtZXMiOlsidG9nZ2xlU2VhcmNoIiwidHlwZSIsInBheWxvYWQiLCJkaXNwYXRjaCIsImdldFN0YXRlIiwic3RhdGUiLCJzeW5jIiwiZm9jdXMiLCJzZWFyY2hFbmFibGVkIiwibmV4dCIsInBlcnNpc3QiLCJ2YWx1ZSIsInF1ZXJ5Iiwia2V5IiwicHJvcGVydHkiLCJnbG9iYWwiLCJzZXRUaW1lb3V0IiwiZWwiLCJkb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJyYW5nZSIsImxlbmd0aCIsInNldFNlbGVjdGlvblJhbmdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O2tCQUNlQSxZO0FBRVIsSUFBTUMsc0JBQU8sdUJBQWI7O0FBRVAsU0FBU0QsWUFBVCxHQUFvQztBQUFBLEtBQWRFLE9BQWMsdUVBQUosRUFBSTs7QUFDbkMsUUFBTyxVQUFDQyxRQUFELEVBQVdDLFFBQVgsRUFBd0I7QUFDOUIsTUFBTUMsUUFBUUQsVUFBZDs7QUFFQSxNQUFJRixRQUFRSSxJQUFaLEVBQWtCO0FBQ2pCQyxTQUFNRixNQUFNRyxhQUFaO0FBQ0E7QUFDQTs7QUFFRCxNQUFNQyxPQUFRLFdBQVdQLE9BQVosR0FBdUJBLFFBQVFLLEtBQS9CLEdBQXVDLENBQUNGLE1BQU1HLGFBQTNEOztBQUVBLE1BQUksQ0FBQ0MsSUFBTCxFQUFXO0FBQ1ZOLFlBQVMsY0FBTyxFQUFDTyxTQUFTLElBQVYsRUFBZ0JDLE9BQU9BLE9BQXZCLEVBQVAsQ0FBVDtBQUNBOztBQUVEUixXQUFTLHFCQUFjLEVBQUNTLE9BQU8sRUFBQyxrQkFBa0JILElBQW5CLEVBQXlCLGtCQUFrQixDQUEzQyxFQUFSLEVBQWQsQ0FBVDtBQUNBLEVBZkQ7QUFnQkE7O0FBRURULGFBQWFDLElBQWIsR0FBb0JBLElBQXBCO0FBQ0FELGFBQWFhLEdBQWIsR0FBbUIsZ0JBQW5CO0FBQ0FiLGFBQWFjLFFBQWIsR0FBd0IsZUFBeEI7O0FBRUEsU0FBU1AsS0FBVCxDQUFlRSxJQUFmLEVBQXFCO0FBQ3BCLEtBQUksQ0FBQ0EsSUFBTCxFQUFXO0FBQ1Y7QUFDQTs7QUFFRCxLQUFJLEVBQUUsY0FBY00sTUFBaEIsQ0FBSixFQUE2QjtBQUM1QjtBQUNBOztBQUVEQyxZQUFXLFlBQU07QUFDaEIsTUFBTUMsS0FBS0YsT0FBT0csUUFBUCxDQUFnQk4sS0FBaEIsQ0FBc0Isb0JBQXRCLENBQVg7O0FBRUEsTUFBSSxDQUFDSyxFQUFMLEVBQVM7QUFDUjtBQUNBOztBQUVELE1BQUlGLE9BQU9HLFFBQVAsQ0FBZ0JDLGFBQWhCLEtBQWtDRixFQUF0QyxFQUEwQztBQUN6Q0EsTUFBR1YsS0FBSDtBQUNBOztBQUVELE1BQU1hLFFBQVFILEdBQUdOLEtBQUgsQ0FBU1UsTUFBdkI7QUFDQUosS0FBR0ssaUJBQUgsQ0FBcUJGLEtBQXJCLEVBQTRCQSxLQUE1QjtBQUNBLEVBYkQsRUFhRyxHQWJIO0FBY0E7O0FBRUQsU0FBU1QsS0FBVCxHQUFpQjtBQUNoQixLQUFJLEVBQUUsY0FBY0ksTUFBaEIsQ0FBSixFQUE2QjtBQUM1QjtBQUNBOztBQUVELEtBQU1FLEtBQUtGLE9BQU9HLFFBQVAsQ0FBZ0JOLEtBQWhCLENBQXNCLG9CQUF0QixDQUFYOztBQUVBLEtBQUksQ0FBQ0ssRUFBTCxFQUFTO0FBQ1I7QUFDQTs7QUFFRCxRQUFPQSxHQUFHTixLQUFWO0FBQ0EiLCJmaWxlIjoidG9nZ2xlLXNlYXJjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cGF0Y2hMb2NhdGlvbiwgc2VhcmNofSBmcm9tICcuLyc7XG5leHBvcnQgZGVmYXVsdCB0b2dnbGVTZWFyY2g7XG5cbmV4cG9ydCBjb25zdCB0eXBlID0gJ1RPR0dMRV9TRUFSQ0hfRU5BQkxFRCc7XG5cbmZ1bmN0aW9uIHRvZ2dsZVNlYXJjaChwYXlsb2FkID0ge30pIHtcblx0cmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcblx0XHRjb25zdCBzdGF0ZSA9IGdldFN0YXRlKCk7XG5cblx0XHRpZiAocGF5bG9hZC5zeW5jKSB7XG5cdFx0XHRmb2N1cyhzdGF0ZS5zZWFyY2hFbmFibGVkKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb25zdCBuZXh0ID0gKCdmb2N1cycgaW4gcGF5bG9hZCkgPyBwYXlsb2FkLmZvY3VzIDogIXN0YXRlLnNlYXJjaEVuYWJsZWQ7XG5cblx0XHRpZiAoIW5leHQpIHtcblx0XHRcdGRpc3BhdGNoKHNlYXJjaCh7cGVyc2lzdDogdHJ1ZSwgdmFsdWU6IHZhbHVlKCl9KSk7XG5cdFx0fVxuXG5cdFx0ZGlzcGF0Y2gocGF0Y2hMb2NhdGlvbih7cXVlcnk6IHsnc2VhcmNoLWVuYWJsZWQnOiBuZXh0LCAnc2VhcmNoLXByZXZpZXcnOiAwfX0pKTtcblx0fTtcbn1cblxudG9nZ2xlU2VhcmNoLnR5cGUgPSB0eXBlO1xudG9nZ2xlU2VhcmNoLmtleSA9ICdzZWFyY2gtZW5hYmxlZCc7XG50b2dnbGVTZWFyY2gucHJvcGVydHkgPSAnc2VhcmNoRW5hYmxlZCc7XG5cbmZ1bmN0aW9uIGZvY3VzKG5leHQpIHtcblx0aWYgKCFuZXh0KSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0aWYgKCEoJ2RvY3VtZW50JyBpbiBnbG9iYWwpKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0c2V0VGltZW91dCgoKSA9PiB7XG5cdFx0Y29uc3QgZWwgPSBnbG9iYWwuZG9jdW1lbnQucXVlcnkoJ2lucHV0W2RhdGEtc2VhcmNoXScpO1xuXG5cdFx0aWYgKCFlbCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmIChnbG9iYWwuZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAhPT0gZWwpIHtcblx0XHRcdGVsLmZvY3VzKCk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgcmFuZ2UgPSBlbC52YWx1ZS5sZW5ndGg7XG5cdFx0ZWwuc2V0U2VsZWN0aW9uUmFuZ2UocmFuZ2UsIHJhbmdlKTtcblx0fSwgMTAwKTtcbn1cblxuZnVuY3Rpb24gdmFsdWUoKSB7XG5cdGlmICghKCdkb2N1bWVudCcgaW4gZ2xvYmFsKSkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IGVsID0gZ2xvYmFsLmRvY3VtZW50LnF1ZXJ5KCdpbnB1dFtkYXRhLXNlYXJjaF0nKTtcblxuXHRpZiAoIWVsKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0cmV0dXJuIGVsLnZhbHVlO1xufVxuIl19