{"version":3,"sources":["../../patterns/navigation-tree/index.js"],"names":["React","require","NavigationItem","module","exports","NavigationTree","props","className","children","data","filter","item","manifest","map","hidden","options","icon","selectSymbol","iconActive","selectActiveSymbol","id","active","href","displayName","onItemClick","onScrollRequest","prefix","type"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,iBAAiBD,QAAQ,oBAAR,CAAvB;AACA;;AAEAE,OAAOC,OAAP,GAAiBC,cAAjB;;AAEA,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,SACE;AAAA;AAAA,MAAK,WAAWA,MAAMC,SAAtB;AACGD,UAAME,QADT;AAEG,KAACF,MAAMG,IAAN,IAAc,EAAf,EAAmBC,MAAnB,CAA0B;AAAA,aAAQ,OAAOC,KAAKC,QAAZ,KAAyB,QAAjC;AAAA,KAA1B,EAAqEC,GAArE,CAAyE,gBAAQ;AAChF,UAAMC,SAAS,CAACH,KAAKC,QAAL,CAAcG,OAAd,IAAyB,EAA1B,EAA8BD,MAA9B,IAAwC,KAAvD;AACA,UAAME,OAAOC,aAAaX,KAAb,EAAoBK,IAApB,CAAb;AACA,UAAMO,aAAaC,mBAAmBb,KAAnB,EAA0BK,IAA1B,CAAnB;;AAEA,aACE;AAAC,sBAAD;AAAA;AACE,eAAKA,KAAKS,EADZ;AAEE,kBAAQT,KAAKU,MAFf;AAGE,kBAAQP,MAHV;AAIE,gBAAMH,KAAKW,IAJb;AAKE,cAAIX,KAAKS,EALX,CAKc;;;;;;;;AALd,YAaE,MAAMT,KAAKC,QAAL,CAAcW,WAbtB;AAcE,mBAASjB,MAAMkB,WAdjB;AAeE,2BAAiBlB,MAAMmB,eAfzB;AAgBE,kBAAQnB,MAAMoB,MAhBhB;AAiBE,kBAAQV,IAjBV;AAkBE,wBAAcE,UAlBhB;AAmBE,gBAAMP,KAAKgB;AAnBb;AAsBIhB,aAAKgB,IAAL,KAAc,QAAd,IACE,oBAAC,cAAD;AACE,kBAAQrB,MAAMe,MADhB;AAEE,gBAAMV,KAAKH,QAFb;AAGE,cAAIG,KAAKS,EAHX;AAIE,mBAASd,MAAMkB,WAJjB;AAKE,2BAAiBlB,MAAMmB,eALzB;AAME,kBAAQd,KAAKe;AANf;AAvBN,OADF;AAmCD,KAxCA;AAFH,GADF;AA8CD;;AAED,SAASP,kBAAT,CAA4Bb,KAA5B,EAAmCK,IAAnC,EAAyC;AACvC,MAAIA,KAAKgB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAIhB,KAAKC,QAAL,CAAcG,OAAd,CAAsBG,UAA1B,EAAsC;AACpC,WAAOP,KAAKC,QAAL,CAAcG,OAAd,CAAsBG,UAA7B;AACD;;AAED,SAAOP,KAAKgB,IAAZ;AACD;;AAED,SAASV,YAAT,CAAsBX,KAAtB,EAA6BK,IAA7B,EAAmC;AACjC,MAAIA,KAAKgB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAIhB,KAAKC,QAAL,CAAcG,OAAd,CAAsBC,IAA1B,EAAgC;AAC9B,WAAOL,KAAKC,QAAL,CAAcG,OAAd,CAAsBC,IAA7B;AACD;;AAED,SAAOL,KAAKgB,IAAZ;AACD","file":"index.js","sourcesContent":["const React = require('react');\nconst NavigationItem = require('../navigation-item');\n// const Flag = require('flag');\n\nmodule.exports = NavigationTree;\n\nfunction NavigationTree(props) {\n  return (\n    <div className={props.className}>\n      {props.children}\n      {(props.data || []).filter(item => typeof item.manifest === 'object').map(item => {\n        const hidden = (item.manifest.options || {}).hidden || false;\n        const icon = selectSymbol(props, item);\n        const iconActive = selectActiveSymbol(props, item);\n\n        return (\n          <NavigationItem\n            key={item.id}\n            active={item.active}\n            hidden={hidden}\n            href={item.href}\n            id={item.id}/*\n            meta={item.warnings.map(warning => {\n              switch (warning.type) {\n                case 'flag':\n                default:\n                  return <Flag key={warning.value} title={warning.message}>{warning.value}</Flag>;\n              }\n            })}*/\n            name={item.manifest.displayName}\n            onClick={props.onItemClick}\n            onScrollRequest={props.onScrollRequest}\n            prefix={props.prefix}\n            symbol={icon}\n            symbolActive={iconActive}\n            type={item.type}\n          >\n            {\n              item.type === 'folder' &&\n                <NavigationTree\n                  active={props.active}\n                  data={item.children}\n                  id={item.id}\n                  onClick={props.onItemClick}\n                  onScrollRequest={props.onScrollRequest}\n                  prefix={item.prefix}\n                />\n            }\n          </NavigationItem>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction selectActiveSymbol(props, item) {\n  if (item.type === 'pattern') {\n    return null;\n  }\n\n  if (item.manifest.options.iconActive) {\n    return item.manifest.options.iconActive;\n  }\n\n  return item.type;\n}\n\nfunction selectSymbol(props, item) {\n  if (item.type === 'pattern') {\n    return null;\n  }\n\n  if (item.manifest.options.icon) {\n    return item.manifest.options.icon;\n  }\n\n  return item.type;\n}\n"]}