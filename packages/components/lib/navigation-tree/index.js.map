{"version":3,"sources":["../../patterns/navigation-tree/index.js"],"names":["React","require","NavigationItem","module","exports","NavigationTree","props","className","children","data","filter","item","manifest","map","hidden","options","icon","selectSymbol","iconActive","selectActiveSymbol","id","active","href","displayName","onItemClick","onScrollRequest","prefix","type"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,iBAAiBD,QAAQ,oBAAR,CAAvB;AACA;;AAEAE,OAAOC,OAAP,GAAiBC,cAAjB;;AAEA,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,SACD;AAAA;AAAA,MAAK,WAAWA,MAAMC,SAAtB;AACED,UAAME,QADR;AAEE,KAACF,MAAMG,IAAN,IAAc,EAAf,EACMC,MADN,CACa;AAAA,aAAQ,OAAOC,KAAKC,QAAZ,KAAyB,QAAjC;AAAA,KADb,EAEMC,GAFN,CAEU,gBAAQ;AACX,UAAMC,SAAS,CAACH,KAAKC,QAAL,CAAcG,OAAd,IAAyB,EAA1B,EAA8BD,MAA9B,IAAwC,KAAvD;AACA,UAAME,OAAOC,aAAaX,KAAb,EAAoBK,IAApB,CAAb;AACA,UAAMO,aAAaC,mBAAmBb,KAAnB,EAA0BK,IAA1B,CAAnB;;AAEA,aACT;AAAC,sBAAD;AAAA;AACC,eAAKA,KAAKS,EADX;AAEC,kBAAQT,KAAKU,MAFd;AAGC,kBAAQP,MAHT;AAIC,gBAAMH,KAAKW,IAJZ;AAKC,cACcX,KAAKS,EANpB,CAOe;;;;;;;;AAPf,YAeC,MAAMT,KAAKC,QAAL,CAAcW,WAfrB;AAgBC,mBAASjB,MAAMkB,WAhBhB;AAiBC,2BAAiBlB,MAAMmB,eAjBxB;AAkBC,kBAAQnB,MAAMoB,MAlBf;AAmBC,kBAAQV,IAnBT;AAoBC,wBAAcE,UApBf;AAqBC,gBAAMP,KAAKgB;AArBZ;AAuBEhB,aAAKgB,IAAL,KAAc,QAAd,IACD,oBAAC,cAAD;AACC,kBAAQrB,MAAMe,MADf;AAEC,gBAAMV,KAAKH,QAFZ;AAGC,cAAIG,KAAKS,EAHV;AAIC,mBAASd,MAAMkB,WAJhB;AAKC,2BAAiBlB,MAAMmB,eALxB;AAMC,kBAAQd,KAAKe;AANd;AAxBD,OADS;AAoCD,KA3CN;AAFF,GADC;AAiDD;;AAED,SAASP,kBAAT,CAA4Bb,KAA5B,EAAmCK,IAAnC,EAAyC;AACvC,MAAIA,KAAKgB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAIhB,KAAKC,QAAL,CAAcG,OAAd,CAAsBG,UAA1B,EAAsC;AACpC,WAAOP,KAAKC,QAAL,CAAcG,OAAd,CAAsBG,UAA7B;AACD;;AAED,SAAOP,KAAKgB,IAAZ;AACD;;AAED,SAASV,YAAT,CAAsBX,KAAtB,EAA6BK,IAA7B,EAAmC;AACjC,MAAIA,KAAKgB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAIhB,KAAKC,QAAL,CAAcG,OAAd,CAAsBC,IAA1B,EAAgC;AAC9B,WAAOL,KAAKC,QAAL,CAAcG,OAAd,CAAsBC,IAA7B;AACD;;AAED,SAAOL,KAAKgB,IAAZ;AACD","file":"index.js","sourcesContent":["const React = require('react');\nconst NavigationItem = require('../navigation-item');\n// Const Flag = require('flag');\n\nmodule.exports = NavigationTree;\n\nfunction NavigationTree(props) {\n  return (\n\t<div className={props.className}>\n\t\t{props.children}\n\t\t{(props.data || [])\n        .filter(item => typeof item.manifest === 'object')\n        .map(item => {\n          const hidden = (item.manifest.options || {}).hidden || false;\n          const icon = selectSymbol(props, item);\n          const iconActive = selectActiveSymbol(props, item);\n\n          return (\n\t<NavigationItem\n\t\tkey={item.id}\n\t\tactive={item.active}\n\t\thidden={hidden}\n\t\thref={item.href}\n\t\tid={\n                item.id\n              } /*\n            Meta={item.warnings.map(warning => {\n              switch (warning.type) {\n                case 'flag':\n                default:\n                  return <Flag key={warning.value} title={warning.message}>{warning.value}</Flag>;\n              }\n            })} */\n\t\tname={item.manifest.displayName}\n\t\tonClick={props.onItemClick}\n\t\tonScrollRequest={props.onScrollRequest}\n\t\tprefix={props.prefix}\n\t\tsymbol={icon}\n\t\tsymbolActive={iconActive}\n\t\ttype={item.type}\n\t>\n\t\t{item.type === 'folder' && (\n\t\t<NavigationTree\n\t\t\tactive={props.active}\n\t\t\tdata={item.children}\n\t\t\tid={item.id}\n\t\t\tonClick={props.onItemClick}\n\t\t\tonScrollRequest={props.onScrollRequest}\n\t\t\tprefix={item.prefix}\n\t\t/>\n              )}\n\t</NavigationItem>\n          );\n        })}\n\t</div>\n  );\n}\n\nfunction selectActiveSymbol(props, item) {\n  if (item.type === 'pattern') {\n    return null;\n  }\n\n  if (item.manifest.options.iconActive) {\n    return item.manifest.options.iconActive;\n  }\n\n  return item.type;\n}\n\nfunction selectSymbol(props, item) {\n  if (item.type === 'pattern') {\n    return null;\n  }\n\n  if (item.manifest.options.icon) {\n    return item.manifest.options.icon;\n  }\n\n  return item.type;\n}\n"]}