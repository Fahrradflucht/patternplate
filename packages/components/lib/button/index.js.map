{"version":3,"sources":["../../patterns/button/index.js"],"names":["React","require","styled","default","tag","fonts","Icon","Link","FONTS","Button","props","OuterElement","type","className","title","onClick","external","href","children","symbol","defaultProps","StyledLabel","span","FRAME","frameless","TRANSPARENCY","transparent","StyledButton","theme","background","color","StyledIcon","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,SAASD,QAAQ,mBAAR,EAA6BE,OAA5C;AACA,IAAMC,MAAMH,QAAQ,SAAR,EAAmBE,OAA/B;;AAEA,IAAME,QAAQJ,QAAQ,UAAR,CAAd;AACA,IAAMK,OAAOL,QAAQ,SAAR,CAAb;AACA,IAAMM,OAAON,QAAQ,SAAR,CAAb;;AAEA,IAAMO,QAAQH,OAAd;;AAEA,SAASI,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAMC,eACJD,MAAME,IAAN,KAAe,MAAf,GACIR,IAAI,CAAC,UAAD,EAAa,MAAb,CAAJ,EAA0BG,IAA1B,CADJ,GAEIH,IAAI,CAAC,UAAD,CAAJ,EAAkB,QAAlB,CAHN;;AAKA,SACD;AAAC,gBAAD;AAAA;AACC,iBAAWM,MAAMG,SADlB;AAEC,aAAOH,MAAMI,KAFd;AAGC,eAASJ,MAAMK,OAHhB;AAIC,gBAAUL,MAAMM,QAJjB;AAKC,YAAMN,MAAMO,IALb;AAMC,YAAMP,MAAME;AANb;AAQEF,UAAMQ,QAAN,IAAkB;AAAC,iBAAD;AAAA;AAAcR,YAAMQ;AAApB,KARpB;AASER,UAAMS,MAAN,IAAgB,oBAAC,UAAD,IAAY,QAAQT,MAAMS,MAA1B;AATlB,GADC;AAaD;;AAEDV,OAAOW,YAAP,GAAsB;AACpBR,QAAM;AADc,CAAtB;;AAIA,IAAMS,cAAcnB,OAAOoB,IAAK,gBAAed,MAAML,OAAQ,GAA7D;;AAEA,IAAMoB,QAAQ,SAARA,KAAQ;AAAA,SACZ,CAACb,MAAMc,SAAP,IACC;;;CAFW;AAAA,CAAd;;AAOA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SACnBf,MAAMgB,WAAN,IACC;;CAFkB;AAAA,CAArB;;AAMA,IAAMC,eAAezB,OAAOO,MAAP,CAAe;;;;;;;;;gBASpB;AAAA,SAASC,MAAMkB,KAAN,CAAYC,UAArB;AAAA,CAAgC;WACrC;AAAA,SAASnB,MAAMkB,KAAN,CAAYE,KAArB;AAAA,CAA2B;;;;IAIlCP,KAAM,IAAGE,YAAa;CAd1B;;AAiBA,IAAMM,aAAa7B,OAAOI,IAAP,CAAa;;;;CAAhC;;AAMA0B,OAAOC,OAAP,GAAiBN,YAAjB","file":"index.js","sourcesContent":["const React = require('react');\nconst styled = require('styled-components').default;\nconst tag = require('tag-hoc').default;\n\nconst fonts = require('../fonts');\nconst Icon = require('../icon');\nconst Link = require('../link');\n\nconst FONTS = fonts();\n\nfunction Button(props) {\n  const OuterElement =\n    props.type === 'link'\n      ? tag(['external', 'type'])(Link)\n      : tag(['external'])('button');\n\n  return (\n\t<OuterElement\n\t\tclassName={props.className}\n\t\ttitle={props.title}\n\t\tonClick={props.onClick}\n\t\texternal={props.external}\n\t\thref={props.href}\n\t\ttype={props.type}\n\t>\n\t\t{props.children && <StyledLabel>{props.children}</StyledLabel>}\n\t\t{props.symbol && <StyledIcon symbol={props.symbol}/>}\n\t</OuterElement>\n  );\n}\n\nButton.defaultProps = {\n  type: 'button'\n};\n\nconst StyledLabel = styled.span`font-family: ${FONTS.default};`;\n\nconst FRAME = props =>\n  !props.frameless &&\n  `\n  padding: 4px;\n  border: 1px solid currentColor;\n`;\n\nconst TRANSPARENCY = props =>\n  props.transparent &&\n  `\n  background: transparent;\n`;\n\nconst StyledButton = styled(Button)`\n  appearance: none;\n  display: inline-flex;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  border: none;\n  outline: 0;\n  background: ${props => props.theme.background};\n  color: ${props => props.theme.color};\n  font: inherit;\n  box-sizing: border-box;\n  vertical-align: top;\n  ${FRAME} ${TRANSPARENCY};\n`;\n\nconst StyledIcon = styled(Icon)`\n  &:not(:first-child) {\n    margin-left: 5px;\n  }\n`;\n\nmodule.exports = StyledButton;\n"]}