{"version":3,"sources":["../../patterns/themes/index.js"],"names":["color","require","merge","module","exports","getThemes","passed","mainColorTone","hsl","bgDark","desaturate","darken","string","bgLight","main","common","active","error","warning","info","success","dark","light","fontWeight","fontSize","name","background","backgroundSecondary","backgroundTertiary","border","colorNegated","recess","mix","a","b","factor"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;;eACgBA,QAAQ,QAAR,C;IAATC,K,YAAAA,K;;AAGPC,OAAOC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAC1C,MAAMC,gBAAgBD,SAASN,MAAMM,MAAN,CAAT,GAAyBN,MAAMQ,GAAN,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,CAA/C;;AAEA,MAAMC,SAASF,cAAcG,UAAd,CAAyB,GAAzB,EAA8BC,MAA9B,CAAqC,GAArC,EAA0CC,MAA1C,EAAf;AACA,MAAMC,UAAU,oBAAhB;AACA,MAAMC,OAAOP,cAAcI,MAAd,CAAqB,GAArB,EAA0BC,MAA1B,EAAb;;AAEA,MAAMG,SAAS;AACbC,YAAQF,IADK;AAEbG,WAAO,sBAFM,EAEkB;AAC/BC,aAAS,uBAHI,EAGqB;AAClCC,UAAM,uBAJO,EAIkB;AAC/BC,aAAS,sBALI,EAKoB;AACjCC,UAAM,qBANO;AAObC,WAAO,wBAPM;AAQbC,gBAAY,KARC;AASbC,cAAU;AATG,GAAf;;AAYA,MAAMH,OAAOnB,MAAM,EAAN,EAAUa,MAAV,EAAkB;AAC7BU,UAAM,MADuB;AAE7BC,gBAAYjB,MAFiB;AAG7BkB,yBAAqBpB,cAAcG,UAAd,CAAyB,GAAzB,EAA8BC,MAA9B,CAAqC,IAArC,EAA2CC,MAA3C,EAHQ;AAI7BgB,wBAAoBrB,cAAcG,UAAd,CAAyB,GAAzB,EAA8BC,MAA9B,CAAqC,GAArC,EAA0CC,MAA1C,EAJS;AAK7BiB,YAAQtB,cAAcG,UAAd,CAAyB,GAAzB,EAA8BC,MAA9B,CAAqC,IAArC,EAA2CC,MAA3C,EALqB;AAM7BZ,WAAO,mBANsB;AAO7B8B,kBAAc,qBAPe;AAQ7BC,YAAQ;AARqB,GAAlB,CAAb;;AAWA,MAAMT,QAAQpB,MAAM,EAAN,EAAUa,MAAV,EAAkB;AAC9BU,UAAM,OADwB;AAE9BC,gBAAYb,OAFkB;AAG9Bc,yBAAqB,wBAHS;AAI9BC,wBAAoB,wBAJU;AAK9BC,YAAQ,wBALsB;AAM9B7B,WAAO,qBANuB;AAO9B8B,kBAAc,wBAPgB;AAQ9BC,YAAQ,wBARsB;AAS9BR,gBAAY;AATkB,GAAlB,CAAd;;AAYA,SAAO;AACLF,QADK;AAELC;AAFK,GAAP;AAID,CA9CD;;AAgDA,SAASU,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,MAAnB,EAA2B;AACzB,SAAOnC,MAAMiC,CAAN,EACJD,GADI,CACAhC,MAAMkC,CAAN,CADA,EACUC,MADV,CAAP;AAED","file":"index.js","sourcesContent":["const color = require('color');\nconst {merge} = require('lodash');\n\n\nmodule.exports = function getThemes(passed) {\n  const mainColorTone = passed ? color(passed) : color.hsl(210, 100, 100);\n\n  const bgDark = mainColorTone.desaturate(0.5).darken(0.9).string();\n  const bgLight = 'hsl(255, 0%, 100%)';\n  const main = mainColorTone.darken(0.4).string();\n\n  const common = {\n    active: main,\n    error: 'rgba(205, 63, 69, 1)', // errors, alpha, deprecated\n    warning: 'rgba(255, 189, 46, 1)', // warnings, beta\n    info: 'rgba(80, 179, 221, 1)', // rc\n    success: 'rgba(74, 165, 74, 1)', // stable\n    dark: 'rgba(15, 15, 15, 1)',\n    light: 'rgba(220, 220, 220, 1)',\n    fontWeight: '100',\n    fontSize: '14px'\n  };\n\n  const dark = merge({}, common, {\n    name: 'dark',\n    background: bgDark,\n    backgroundSecondary: mainColorTone.desaturate(0.5).darken(0.85).string(),\n    backgroundTertiary: mainColorTone.desaturate(0.5).darken(0.8).string(),\n    border: mainColorTone.desaturate(0.5).darken(0.85).string(),\n    color: 'hsl(255, 0%, 95%)',\n    colorNegated: 'rgba(68, 68, 68, 1)',\n    recess: 'rgba(153, 153, 153, 1)'\n  });\n\n  const light = merge({}, common, {\n    name: 'light',\n    background: bgLight,\n    backgroundSecondary: 'rgba(246, 248, 250, 1)',\n    backgroundTertiary: 'rgba(246, 248, 250, 1)',\n    border: 'rgba(228, 228, 228, 1)',\n    color: 'rgba(68, 68, 68, 1)',\n    colorNegated: 'rgba(238, 238, 238, 1)',\n    recess: 'rgba(106, 115, 125, 1)',\n    fontWeight: 'initial'\n  });\n\n  return {\n    dark,\n    light\n  };\n}\n\nfunction mix(a, b, factor) {\n  return color(a)\n    .mix(color(b), factor);\n}\n"]}